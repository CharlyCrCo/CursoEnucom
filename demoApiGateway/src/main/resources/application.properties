#Configuracion para el servicio ApiGateway
server.port=8888
spring.application.name=demoApiGateway

spring.main.allow-bean-definition-overriding=true

#CONFIGURACION DE EUREKA CLIENT
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://localhost:9000/eureka

#*********************************************************************
#	SEGURIDAD CON "SPRING SECURITY"
#
#	USUARIO : 
spring.security.user.name=carlos
#	CONTRASEÒA : 
spring.security.user.password=123456
#	ROL
spring.security.user.roles=ADMIN

# CONFIGURACION DE LOS MICROSERVICIOS QUE CONTROLARA API-GATEWAY

# Microservicio CLIENTES
# http://localhost:8013/Clientes
spring.cloud.gateway.routes[0].id=CLIENTES
spring.cloud.gateway.routes[0].uri=http://localhost:8013
spring.cloud.gateway.routes[0].predicates[0]=Path=/Clientes/**

# Microservicio PRODUCTOS
# http://localhost:8010/Productos
spring.cloud.gateway.routes[1].id=PRODUCTOS
spring.cloud.gateway.routes[1].uri=http://localhost:8010
spring.cloud.gateway.routes[1].predicates[0]=Path=/Productos/**

# Microservicio PROVEEDORES
# http://localhost:8011/Proveedores
spring.cloud.gateway.routes[2].id=PROVEEDORES
spring.cloud.gateway.routes[2].uri=http://localhost:8011
spring.cloud.gateway.routes[2].predicates[0]=Path=/Proveedores/**

# Microservicio GESTION-TIENDA
# http://localhost:8014/Tienda
spring.cloud.gateway.routes[3].id=GESTION-TIENDA
spring.cloud.gateway.routes[3].uri=http://localhost:8014
spring.cloud.gateway.routes[3].predicates[0]=Path=/Tienda/**

# Ajustar tiempos de heartbeat para evitar problemas de registro
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30




