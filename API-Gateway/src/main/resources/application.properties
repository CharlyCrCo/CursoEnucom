#Configuracion para servicio de ApiGateway
server.port=8000
spring.application.name=API-Gateway
spring.profiles.active=dev

#Configuracion de Eureka Dicovery Client para registro en Eureka Server.
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://localhost:9000/eureka

# CONFIGURACION DE LOS MICROSERVICIOS QUE CONTROLARA API-GATEWAY

# Microservicio CLIENTES
# http://localhost:8013/Clientes
#spring.cloud.gateway.mvc.routes[0].id=CLIENTES
#spring.cloud.gateway.mvc.routes[0].uri=http://localhost:8013
#spring.cloud.gateway.mvc.routes[0].predicates[0]=Path=/Clientes/**

# Microservicio PRODUCTOS
# http://localhost:8010/Productos
#spring.cloud.gateway.mvc.routes[1].id=PRODUCTOS
#spring.cloud.gateway.mvc.routes[1].uri=http://localhost:8010
#spring.cloud.gateway.mvc.routes[1].predicates[0]=Path=/Productos/**

# Microservicio PROVEEDORES
# http://localhost:8011/Proveedores
#spring.cloud.gateway.mvc.routes[2].id=PROVEEDORES
#spring.cloud.gateway.mvc.routes[2].uri=http://localhost:8011
#spring.cloud.gateway.mvc.routes[2].predicates[0]=Path=/Proveedores/**

# Microservicio GESTION-TIENDA
# http://localhost:8014/Tienda
#spring.cloud.gateway.mvc.routes[3].id=GESTION-TIENDA
#spring.cloud.gateway.mvc.routes[3].uri=http://localhost:8014
#spring.cloud.gateway.mvc.routes[3].predicates[0]=Path=/Tienda/**
